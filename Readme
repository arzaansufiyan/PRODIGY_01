PRODIGY_CS_02
Pixel Mnipulation for Image Encryption. Developed a simple image encryption tool using pixel manipulation. Where you can perform operations like swapping pixel values or applying a basic mathematical operation to each pixel. It allow users to encrypt and decrypt images.

Pixel Manipulation for Image Encryption
This Python script provides functionalities to encrypt and decrypt images using a simple encryption algorithm based on XOR operation. It also allows users to swap the RGB values of pixels in an image.

Functionality
Encryption: Encrypts an image using a provided encryption key.
Decryption: Decrypts an encrypted image using the corresponding decryption key.
Pixel Swapping: Swaps the RGB values of pixels in an image.
User Interaction: The script prompts the user to choose between encryption, decryption, pixel swapping, or exiting the program.
Usage
Encrypting an Image: Run the script and choose the encryption option. Enter the path to the image file and the encryption key when prompted. The encrypted image will be displayed.

Decrypting an Image: Choose the decryption option, enter the decryption key, and the original image will be displayed if the decryption is successful.

Swapping Pixels: Select the option to swap pixels, and the image with swapped RGB values will be displayed.

Exiting the Program: Choose the exit option to terminate the program.

Requirements
Python 3.x
Python Imaging Library (Pillow)
How to Run
Clone the repository:

git clone https://github.com/your-username/PRODIGY_CS_02.git
